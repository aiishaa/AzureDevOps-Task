# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - 'main'

pr:
  branches:
    include:
      - 'main'

pool:
  name: "aws-agents-pool"

stages:
  - stage: Plan
    displayName: 'Plan Terraform'
    jobs:
      - job: Plan
        displayName: 'Terraform Plan'
        steps:
          - checkout: self
          - task: AWSShellScript@1
            inputs:
              awsCredentials: 'AWS Service Connection'
              regionName: 'us-east-1'
              scriptType: 'inline'
              inlineScript: 'sudo apt install unzip'
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'aws'
              command: 'init'
              backendServiceAWS: 'aws_for_terraform'
              backendAWSBucketName: 's3-terraform-backend-bucket-123456'
              backendAWSKey: 'terraform.tfstate'
          - task: AWSShellScript@1
            inputs:
              awsCredentials: 'AWS Service Connection'
              regionName: 'us-east-1'
              scriptType: 'inline'
              inlineScript: |
                curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                unzip awscliv2.zip
                sudo ./aws/install
          - script: |
              # Fetch Terraform variables from AWS Secrets Manager
              secret_value=$(aws secretsmanager get-secret-value --secret-id MyTerraformVarsSecret --query SecretString --output text)
              echo "$secret_value" > terraform.tfvars
            displayName: 'Fetch Terraform Variables from AWS Secrets Manager'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'aws'
              command: 'plan'
              commandOptions: '-var-file=terraform.tfvars'
              environmentServiceNameAWS: 'aws_for_terraform'
