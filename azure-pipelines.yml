trigger:
  branches:
    include:
      - 'main'

pr:
  branches:
    include:
      - 'main'

pool:
  name: "aws-agents-pool"
  demand:
    - Agent.Name -equals terraform-agent

variables:
  imageName: 'aishafathy/nodeapp:latest'

stages:
  - stage: Setup
    displayName: 'Setup Environment'
    jobs:
      - job: AWS_Setup
        displayName: 'Setup AWS Environment'
        steps:
          - task: AWSShellScript@1
            inputs:
              awsCredentials: 'AWS Service Connection'
              regionName: 'us-east-1'
              scriptType: 'inline'
              inlineScript: |
                sudo apt-get update
                sudo apt-get install -y unzip jq

      - job: Terraform_Installation
        displayName: 'Install Terraform'
        steps:
          - script: |
              wget https://releases.hashicorp.com/terraform/1.2.3/terraform_1.2.3_linux_amd64.zip
              unzip terraform_1.2.3_linux_amd64.zip
              sudo mv terraform /usr/local/bin/
              terraform --version  # Verify installation
            displayName: 'Install Terraform'

  - stage: Init
    displayName: 'Init Terraform'
    dependsOn: Setup
    jobs:
      - job: Terraform_Initialization
        displayName: 'Initialize Terraform'
        steps:
          - checkout: self
          - task: TerraformTaskV4@4
            inputs:
              provider: 'aws'
              command: 'init'
              backendServiceAWS: 'aws_for_terraform'
              backendAWSBucketName: 's3-terraform-backend-bucket-123456'
              backendAWSKey: 'terraform.tfstate'


  - stage: Plan
    displayName: 'Plan Terraform'
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    dependsOn: Init
    jobs:
      - job: Terraform_Plan
        displayName: 'Terraform Plan'
        steps:
          - checkout: self
          - task: TerraformTaskV4@4
            inputs:
              provider: 'aws'
              command: 'plan'
              commandOptions: '-var-file=terraform.tfvars'
              environmentServiceNameAWS: 'aws_for_terraform'

  - stage: Apply
    displayName: 'Apply Terraform'
    condition: or(
      and(eq(variables['Build.Reason'], 'Manual'), eq(variables['Build.SourceBranch'], 'refs/heads/main')),
      and(ne(variables['Build.Reason'], 'Manual'), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
      )
    dependsOn: Init
    jobs:
      - job: Terraform_Apply
        displayName: 'Terraform Apply'
        steps:
          - checkout: self
          # - task: TerraformTaskV4@4
          #   inputs:
          #     provider: 'aws'
          #     command: 'apply'
          #     commandOptions: '-var-file=terraform.tfvars --auto-approve'
          #     environmentServiceNameAWS: 'aws_for_terraform'
